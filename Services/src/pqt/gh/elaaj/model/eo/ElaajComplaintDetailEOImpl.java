package pqt.gh.elaaj.model.eo;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 19 17:18:11 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ElaajComplaintDetailEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ComplaintId,
        CompanyName,
        NameOfEmployee,
        PatientName,
        CertificateNumber,
        CellNumber,
        Email,
        Subject,
        PalceOfComplaint,
        Feedback,
        Message,
        ComplaintDate,
        ComplaintTo;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COMPLAINTID = AttributesEnum.ComplaintId.index();
    public static final int COMPANYNAME = AttributesEnum.CompanyName.index();
    public static final int NAMEOFEMPLOYEE = AttributesEnum.NameOfEmployee.index();
    public static final int PATIENTNAME = AttributesEnum.PatientName.index();
    public static final int CERTIFICATENUMBER = AttributesEnum.CertificateNumber.index();
    public static final int CELLNUMBER = AttributesEnum.CellNumber.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int PALCEOFCOMPLAINT = AttributesEnum.PalceOfComplaint.index();
    public static final int FEEDBACK = AttributesEnum.Feedback.index();
    public static final int MESSAGE = AttributesEnum.Message.index();
    public static final int COMPLAINTDATE = AttributesEnum.ComplaintDate.index();
    public static final int COMPLAINTTO = AttributesEnum.ComplaintTo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ElaajComplaintDetailEOImpl() {
    }

    /**
     * Gets the attribute value for ComplaintId, using the alias name ComplaintId.
     * @return the value of ComplaintId
     */
    public Number getComplaintId() {
        return (Number) getAttributeInternal(COMPLAINTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComplaintId.
     * @param value value to set the ComplaintId
     */
    public void setComplaintId(Number value) {
        setAttributeInternal(COMPLAINTID, value);
    }

    /**
     * Gets the attribute value for CompanyName, using the alias name CompanyName.
     * @return the value of CompanyName
     */
    public String getCompanyName() {
        return (String) getAttributeInternal(COMPANYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyName.
     * @param value value to set the CompanyName
     */
    public void setCompanyName(String value) {
        setAttributeInternal(COMPANYNAME, value);
    }

    /**
     * Gets the attribute value for NameOfEmployee, using the alias name NameOfEmployee.
     * @return the value of NameOfEmployee
     */
    public String getNameOfEmployee() {
        return (String) getAttributeInternal(NAMEOFEMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NameOfEmployee.
     * @param value value to set the NameOfEmployee
     */
    public void setNameOfEmployee(String value) {
        setAttributeInternal(NAMEOFEMPLOYEE, value);
    }

    /**
     * Gets the attribute value for PatientName, using the alias name PatientName.
     * @return the value of PatientName
     */
    public String getPatientName() {
        return (String) getAttributeInternal(PATIENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PatientName.
     * @param value value to set the PatientName
     */
    public void setPatientName(String value) {
        setAttributeInternal(PATIENTNAME, value);
    }

    /**
     * Gets the attribute value for CertificateNumber, using the alias name CertificateNumber.
     * @return the value of CertificateNumber
     */
    public String getCertificateNumber() {
        return (String) getAttributeInternal(CERTIFICATENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertificateNumber.
     * @param value value to set the CertificateNumber
     */
    public void setCertificateNumber(String value) {
        setAttributeInternal(CERTIFICATENUMBER, value);
    }

    /**
     * Gets the attribute value for CellNumber, using the alias name CellNumber.
     * @return the value of CellNumber
     */
    public String getCellNumber() {
        return (String) getAttributeInternal(CELLNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CellNumber.
     * @param value value to set the CellNumber
     */
    public void setCellNumber(String value) {
        setAttributeInternal(CELLNUMBER, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Subject, using the alias name Subject.
     * @return the value of Subject
     */
    public String getSubject() {
        return (String) getAttributeInternal(SUBJECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Subject.
     * @param value value to set the Subject
     */
    public void setSubject(String value) {
        setAttributeInternal(SUBJECT, value);
    }

    /**
     * Gets the attribute value for PalceOfComplaint, using the alias name PalceOfComplaint.
     * @return the value of PalceOfComplaint
     */
    public String getPalceOfComplaint() {
        return (String) getAttributeInternal(PALCEOFCOMPLAINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PalceOfComplaint.
     * @param value value to set the PalceOfComplaint
     */
    public void setPalceOfComplaint(String value) {
        setAttributeInternal(PALCEOFCOMPLAINT, value);
    }

    /**
     * Gets the attribute value for Feedback, using the alias name Feedback.
     * @return the value of Feedback
     */
    public String getFeedback() {
        return (String) getAttributeInternal(FEEDBACK);
    }

    /**
     * Sets <code>value</code> as the attribute value for Feedback.
     * @param value value to set the Feedback
     */
    public void setFeedback(String value) {
        setAttributeInternal(FEEDBACK, value);
    }

    /**
     * Gets the attribute value for Message, using the alias name Message.
     * @return the value of Message
     */
    public String getMessage() {
        return (String) getAttributeInternal(MESSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Message.
     * @param value value to set the Message
     */
    public void setMessage(String value) {
        setAttributeInternal(MESSAGE, value);
    }

    /**
     * Gets the attribute value for ComplaintDate, using the alias name ComplaintDate.
     * @return the value of ComplaintDate
     */
    public Date getComplaintDate() {
        return (Date) getAttributeInternal(COMPLAINTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComplaintDate.
     * @param value value to set the ComplaintDate
     */
    public void setComplaintDate(Date value) {
        setAttributeInternal(COMPLAINTDATE, value);
    }

    /**
     * Gets the attribute value for ComplaintTo, using the alias name ComplaintTo.
     * @return the value of ComplaintTo
     */
    public String getComplaintTo() {
        return (String) getAttributeInternal(COMPLAINTTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComplaintTo.
     * @param value value to set the ComplaintTo
     */
    public void setComplaintTo(String value) {
        setAttributeInternal(COMPLAINTTO, value);
    }

    /**
     * @param complaintId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number complaintId) {
        return new Key(new Object[] { complaintId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.gh.elaaj.model.eo.ElaajComplaintDetailEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl seq =
            new oracle.jbo.server.SequenceImpl("ELAAJ_COMPLAINT_DETAIL_SQU", getDBTransaction());
        setComplaintId(seq.getSequenceNumber());
        try {
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setNameOfEmployee(userSession.getAttribute("pCNICNo").toString());
            } catch (Exception ex) {
                setNameOfEmployee("");
            }

            try {
                setCertificateNumber(userSession.getAttribute("pCertNo").toString());
            } catch (Exception ex) {
                setCertificateNumber("");
            }
        } catch (Exception ex) {
            setNameOfEmployee("");
            setCertificateNumber("");
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

