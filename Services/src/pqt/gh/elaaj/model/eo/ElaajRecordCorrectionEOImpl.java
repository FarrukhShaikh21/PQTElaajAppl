package pqt.gh.elaaj.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 14 20:09:55 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ElaajRecordCorrectionEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RecordCorrectionId,
        CompanyName,
        NameOfEmployee,
        NameOfDependand,
        RelationshipWithEmployee,
        EmployeeId,
        Dob,
        Gender,
        CertificateNumber,
        CellNumber,
        Email,
        TypeOfCorrection,
        DetailOfCorrection,
        CnicNo,
        IbanNo,
        Remarks;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RECORDCORRECTIONID = AttributesEnum.RecordCorrectionId.index();
    public static final int COMPANYNAME = AttributesEnum.CompanyName.index();
    public static final int NAMEOFEMPLOYEE = AttributesEnum.NameOfEmployee.index();
    public static final int NAMEOFDEPENDAND = AttributesEnum.NameOfDependand.index();
    public static final int RELATIONSHIPWITHEMPLOYEE = AttributesEnum.RelationshipWithEmployee.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int DOB = AttributesEnum.Dob.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int CERTIFICATENUMBER = AttributesEnum.CertificateNumber.index();
    public static final int CELLNUMBER = AttributesEnum.CellNumber.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int TYPEOFCORRECTION = AttributesEnum.TypeOfCorrection.index();
    public static final int DETAILOFCORRECTION = AttributesEnum.DetailOfCorrection.index();
    public static final int CNICNO = AttributesEnum.CnicNo.index();
    public static final int IBANNO = AttributesEnum.IbanNo.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ElaajRecordCorrectionEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.gh.elaaj.model.eo.ElaajRecordCorrectionEO");
    }


    /**
     * Gets the attribute value for RecordCorrectionId, using the alias name RecordCorrectionId.
     * @return the value of RecordCorrectionId
     */
    public Number getRecordCorrectionId() {
        return (Number) getAttributeInternal(RECORDCORRECTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecordCorrectionId.
     * @param value value to set the RecordCorrectionId
     */
    public void setRecordCorrectionId(Number value) {
        setAttributeInternal(RECORDCORRECTIONID, value);
    }

    /**
     * Gets the attribute value for CompanyName, using the alias name CompanyName.
     * @return the value of CompanyName
     */
    public String getCompanyName() {
        return (String) getAttributeInternal(COMPANYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyName.
     * @param value value to set the CompanyName
     */
    public void setCompanyName(String value) {
        setAttributeInternal(COMPANYNAME, value);
    }

    /**
     * Gets the attribute value for NameOfEmployee, using the alias name NameOfEmployee.
     * @return the value of NameOfEmployee
     */
    public String getNameOfEmployee() {
        return (String) getAttributeInternal(NAMEOFEMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NameOfEmployee.
     * @param value value to set the NameOfEmployee
     */
    public void setNameOfEmployee(String value) {
        setAttributeInternal(NAMEOFEMPLOYEE, value);
    }

    /**
     * Gets the attribute value for NameOfDependand, using the alias name NameOfDependand.
     * @return the value of NameOfDependand
     */
    public String getNameOfDependand() {
        return (String) getAttributeInternal(NAMEOFDEPENDAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for NameOfDependand.
     * @param value value to set the NameOfDependand
     */
    public void setNameOfDependand(String value) {
        setAttributeInternal(NAMEOFDEPENDAND, value);
    }

    /**
     * Gets the attribute value for RelationshipWithEmployee, using the alias name RelationshipWithEmployee.
     * @return the value of RelationshipWithEmployee
     */
    public String getRelationshipWithEmployee() {
        return (String) getAttributeInternal(RELATIONSHIPWITHEMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RelationshipWithEmployee.
     * @param value value to set the RelationshipWithEmployee
     */
    public void setRelationshipWithEmployee(String value) {
        setAttributeInternal(RELATIONSHIPWITHEMPLOYEE, value);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public String getEmployeeId() {
        return (String) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(String value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for Dob, using the alias name Dob.
     * @return the value of Dob
     */
    public Date getDob() {
        return (Date) getAttributeInternal(DOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dob.
     * @param value value to set the Dob
     */
    public void setDob(Date value) {
        setAttributeInternal(DOB, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for CertificateNumber, using the alias name CertificateNumber.
     * @return the value of CertificateNumber
     */
    public String getCertificateNumber() {
        return (String) getAttributeInternal(CERTIFICATENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertificateNumber.
     * @param value value to set the CertificateNumber
     */
    public void setCertificateNumber(String value) {
        setAttributeInternal(CERTIFICATENUMBER, value);
    }

    /**
     * Gets the attribute value for CellNumber, using the alias name CellNumber.
     * @return the value of CellNumber
     */
    public String getCellNumber() {
        return (String) getAttributeInternal(CELLNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CellNumber.
     * @param value value to set the CellNumber
     */
    public void setCellNumber(String value) {
        setAttributeInternal(CELLNUMBER, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for TypeOfCorrection, using the alias name TypeOfCorrection.
     * @return the value of TypeOfCorrection
     */
    public String getTypeOfCorrection() {
        return (String) getAttributeInternal(TYPEOFCORRECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeOfCorrection.
     * @param value value to set the TypeOfCorrection
     */
    public void setTypeOfCorrection(String value) {
        setAttributeInternal(TYPEOFCORRECTION, value);
    }

    /**
     * Gets the attribute value for DetailOfCorrection, using the alias name DetailOfCorrection.
     * @return the value of DetailOfCorrection
     */
    public Date getDetailOfCorrection() {
        return (Date) getAttributeInternal(DETAILOFCORRECTION);
    }

    /**
     * Gets the attribute value for CnicNo, using the alias name CnicNo.
     * @return the value of CnicNo
     */
    public String getCnicNo() {
        return (String) getAttributeInternal(CNICNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CnicNo.
     * @param value value to set the CnicNo
     */
    public void setCnicNo(String value) {
        setAttributeInternal(CNICNO, value);
    }


    /**
     * Gets the attribute value for IbanNo, using the alias name IbanNo.
     * @return the value of IbanNo
     */
    public String getIbanNo() {
        return (String) getAttributeInternal(IBANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for IbanNo.
     * @param value value to set the IbanNo
     */
    public void setIbanNo(String value) {
        setAttributeInternal(IBANNO, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * @param recordCorrectionId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number recordCorrectionId) {
        return new Key(new Object[] { recordCorrectionId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl seq =
                    new oracle.jbo.server.SequenceImpl("elaaj_record_correction_squ", getDBTransaction());
                setRecordCorrectionId(seq.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

