package pqt.gh.elaaj.model.eo;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 18 10:43:43 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ElaajClaimDmsDocEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DocIdPk,
        ElaajClaimIntimateIdFk,
        FileName,
        FileType,
        FileLocation,
        DocFile,
        DocType,
        ElaajClaimIntimateEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCIDPK = AttributesEnum.DocIdPk.index();
    public static final int ELAAJCLAIMINTIMATEIDFK = AttributesEnum.ElaajClaimIntimateIdFk.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILETYPE = AttributesEnum.FileType.index();
    public static final int FILELOCATION = AttributesEnum.FileLocation.index();
    public static final int DOCFILE = AttributesEnum.DocFile.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int ELAAJCLAIMINTIMATEEO = AttributesEnum.ElaajClaimIntimateEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ElaajClaimDmsDocEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.gh.elaaj.model.eo.ElaajClaimDmsDocEO");
    }


    /**
     * Gets the attribute value for DocIdPk, using the alias name DocIdPk.
     * @return the value of DocIdPk
     */
    public Number getDocIdPk() {
        return (Number) getAttributeInternal(DOCIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdPk.
     * @param value value to set the DocIdPk
     */
    public void setDocIdPk(Number value) {
        setAttributeInternal(DOCIDPK, value);
    }

    /**
     * Gets the attribute value for ElaajClaimIntimateIdFk, using the alias name ElaajClaimIntimateIdFk.
     * @return the value of ElaajClaimIntimateIdFk
     */
    public Number getElaajClaimIntimateIdFk() {
        return (Number) getAttributeInternal(ELAAJCLAIMINTIMATEIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElaajClaimIntimateIdFk.
     * @param value value to set the ElaajClaimIntimateIdFk
     */
    public void setElaajClaimIntimateIdFk(Number value) {
        setAttributeInternal(ELAAJCLAIMINTIMATEIDFK, value);
    }

    /**
     * Gets the attribute value for FileName, using the alias name FileName.
     * @return the value of FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileName.
     * @param value value to set the FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FileType, using the alias name FileType.
     * @return the value of FileType
     */
    public String getFileType() {
        return (String) getAttributeInternal(FILETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileType.
     * @param value value to set the FileType
     */
    public void setFileType(String value) {
        setAttributeInternal(FILETYPE, value);
    }

    /**
     * Gets the attribute value for FileLocation, using the alias name FileLocation.
     * @return the value of FileLocation
     */
    public String getFileLocation() {
        return (String) getAttributeInternal(FILELOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileLocation.
     * @param value value to set the FileLocation
     */
    public void setFileLocation(String value) {
        setAttributeInternal(FILELOCATION, value);
    }

    /**
     * Gets the attribute value for DocFile, using the alias name DocFile.
     * @return the value of DocFile
     */
    public BlobDomain getDocFile() {
        return (BlobDomain) getAttributeInternal(DOCFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocFile.
     * @param value value to set the DocFile
     */
    public void setDocFile(BlobDomain value) {
        setAttributeInternal(DOCFILE, value);
    }

    /**
     * Gets the attribute value for DocType, using the alias name DocType.
     * @return the value of DocType
     */
    public Number getDocType() {
        return (Number) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocType.
     * @param value value to set the DocType
     */
    public void setDocType(Number value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * @return the associated entity ElaajClaimIntimateEOImpl.
     */
    public ElaajClaimIntimateEOImpl getElaajClaimIntimateEO() {
        return (ElaajClaimIntimateEOImpl) getAttributeInternal(ELAAJCLAIMINTIMATEEO);
    }

    /**
     * Sets <code>value</code> as the associated entity ElaajClaimIntimateEOImpl.
     */
    public void setElaajClaimIntimateEO(ElaajClaimIntimateEOImpl value) {
        setAttributeInternal(ELAAJCLAIMINTIMATEEO, value);
    }


    /**
     * @param docIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number docIdPk) {
        return new Key(new Object[] { docIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl seq =
                    new oracle.jbo.server.SequenceImpl("ELAAJ_CLAIM_DMS_DOC_SEQ", getDBTransaction());
                setDocIdPk(seq.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

